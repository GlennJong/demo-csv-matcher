{"version":3,"sources":["Application/index.js","App.js","serviceWorker.js","index.js"],"names":["MyDropzone","titleName","className","getFileInfo","children","useState","file","setFile","error","setError","onDrop","useCallback","acceptedFiles","type","useDropzone","getRootProps","getInputProps","isDragActive","multiple","accept","name","Application","refs","tagSelector","useRef","additionSelector","editSheetA","editSheetB","editSheetC","tags","setTags","conflicts","setConflicts","additions","setAdditions","expandTable","setExpandTable","expandResult","setExpandResult","isStart","setStart","showResult","setShowResult","sheetA","setSheetA","sheetB","setSheetB","sheetC","setSheetC","useEffect","handleLoadFiles","files","sheetName","reader","FileReader","onload","data","csvString","cellRegex","split","map","line","cellData","filter","element","undefined","getCsvContent","result","sheet","readAsText","handleExchangeSheet","newSheetA","JSON","parse","stringify","newSheetAName","newSheetB","newSheetBName","handleClickSelectTag","item","newTags","slice","indexOf","push","index","findIndex","splice","handleClickSelectAddition","Additions","handleClickToggleElement","e","self","currentTarget","target","current","classList","contains","remove","add","handleClickDownloadCsv","handleTriggerDownloadCsv","csv","forEach","sheetLine","sheetCell","cellIndex","console","log","cell","replace","fileName","download","downloadTrigger","document","createElement","setAttribute","click","body","append","encodeURI","onClick","ref","key","tag","tagIndex","addition","additionIndex","conflictLines","maximumColumn","length","minimumColumn","lineB","matchers","resultLine","resultLineIndex","array","matcher","includes","matchChecker","i","handleSubmitOptions","htmlFor","onChange","id","lineIndex","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b470e7e1.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport Axios from 'axios';\nimport { useDropzone } from 'react-dropzone'\nimport './style.css';\n\nfunction downloadTrigger(fileName, download) {\n  const downloadTrigger = document.createElement('a');\n  downloadTrigger.setAttribute('download', fileName);\n  downloadTrigger.setAttribute('href', download);\n  downloadTrigger.click();\n  document.body.append(downloadTrigger)\n  // downloadTrigger.remove();\n}\n\nfunction MyDropzone({titleName, className, getFileInfo, children}) {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles[0].type === 'text/csv') {\n      setError('');\n      setFile(acceptedFiles[0]);\n      getFileInfo(acceptedFiles);\n    }\n    else {\n      setFile(null);\n      setError('這個檔案不是 .csv 喔！');\n    }\n  }, [])\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <div {...getRootProps()} className={`${className} ${isDragActive ? '-active' : ''}`}>\n      <input {...getInputProps()} multiple={false} accept=\".csv\" />\n      <div className=\"icon\">\n        <i className=\"far fa-file-alt\"></i>\n      </div>\n      {\n        isDragActive ?\n        <p className=\"msg\">拖曳到這裡</p> :\n        <p className=\"msg\">點擊或拖曳到這裡</p>\n      }\n      {\n        error !== '' &&\n        <p className=\"error\"><i className=\"fas fa-times\"></i> {error}</p>\n      }\n      {\n        file && <p className=\"name\"><i className=\"fas fa-check-circle\"></i> {titleName} {file.name}</p>\n      }\n      <p className=\"info\">{children}</p>\n    </div>\n  )\n}\n\nfunction Application() {\n  // Refs\n  const refs = {\n    tagSelector: useRef(null),\n    additionSelector: useRef(null),\n    editSheetA: useRef(null),\n    editSheetB: useRef(null),\n    editSheetC: useRef(null),\n  }\n  \n  const [tags, setTags] = useState([]);\n  const [conflicts, setConflicts] = useState([]);\n  const [additions, setAdditions] = useState([]);\n  const [expandTable, setExpandTable] = useState('normal');\n  const [expandResult, setExpandResult] = useState('normal');\n  const [isStart, setStart] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [sheetA, setSheetA] = useState(null);\n  const [sheetB, setSheetB] = useState(null);\n  const [sheetC, setSheetC] = useState(null);\n\n  useEffect(() => {\n    // if (!sheetA || !sheetB) {\n    //   handleLoadAllData();\n    // }\n  }, [tags, additions]);\n\n  function getCsvContent(csvString) {\n    const lineRegex = /\\n(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/g;\n    const cellRegex = /,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/g;\n    const lines = csvString.split(lineRegex);\n    const cells = lines.map(line => {\n      let cellData = line.split(cellRegex);\n      cellData = cellData.filter(function (element) {\n        return element !== undefined;\n      });\n      return cellData\n    });\n    return cells;\n  }\n  \n  const handleClickStart = () => {\n    setStart(true);\n  }\n  const handleLoadFiles = (files, sheetName) => {\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = function () {\n      const data = getCsvContent(reader.result);\n      switch (sheetName) {\n        case 'sheetA':\n          setSheetA({ name: file.name, sheet: data });\n          break;\n        case 'sheetB':\n          setSheetB({ name: file.name, sheet: data });\n          break;\n      \n        default:\n          break;\n      }\n    };\n    reader.readAsText(file);\n  }\n  const handleExchangeSheet = () => {\n    const newSheetA = JSON.parse(JSON.stringify(sheetB.sheet));\n    const newSheetAName = sheetB.name;\n    const newSheetB = JSON.parse(JSON.stringify(sheetA.sheet));\n    const newSheetBName = sheetA.name;\n\n    setSheetA({ name: newSheetAName, sheet: newSheetA });\n    setSheetB({ name: newSheetBName, sheet: newSheetB });\n  }\n  // const handleLoadAllData = () => {\n  //   Axios.get('/config/test.csv')\n  //   .then(result => {\n  //     const Asheet = getCsvContent(result.data);\n  //     setSheetA({name: 'test.csv', sheet: Asheet});\n  //     Axios.get('/config/test2.csv')\n  //     .then(result => {\n  //       const Bsheet = getCsvContent(result.data);\n  //       setSheetB({name: 'test2.csv', sheet: Bsheet});\n  //     });\n  //   });\n  // }\n  const handleClickSelectTag = (item) => {\n    const newTags = tags.slice();\n    if (newTags.indexOf(item) === -1) {\n      newTags.push(item);\n    }\n    else {\n      const index = newTags.findIndex(filter => filter === item);\n      newTags.splice(index, 1);\n    }\n    setTags(newTags);\n  }\n  const handleClickSelectAddition = (item) => {\n    const Additions = additions.slice();\n    if (Additions.indexOf(item) === -1) {\n      Additions.push(item);\n    }\n    else {\n      const index = Additions.findIndex(filter => filter === item);\n      Additions.splice(index, 1);\n    }\n    setAdditions(Additions);\n  }\n  const handleSubmitOptions = () => {\n    function matchChecker(array, matchers) {\n      const result = matchers.map(matcher => {\n        return array.indexOf(matcher) !== -1;\n      });\n      return result.includes(true);\n    }\n    \n    const result = JSON.parse(JSON.stringify(sheetA.sheet));\n    const conflictLines = [];\n    \n    const maximumColumn = result[0].length + additions.length;\n    const minimumColumn = result[0].length;\n\n    additions.forEach(index => {\n      result[0].push(sheetB.sheet[0][index]);\n    });\n\n    sheetB.sheet.forEach(lineB => {\n      const matchers = tags.map(tagIndex => lineB[tagIndex]);\n      result.forEach((resultLine, resultLineIndex) => {\n        if (resultLineIndex !== 0) {\n          const isMatch = matchChecker(resultLine, matchers);\n          if (isMatch) {\n            additions.forEach((additionIndex, index) => {\n              if (resultLine.length < maximumColumn) {\n                resultLine.push(lineB[additionIndex]);\n              }\n              else {\n                conflictLines.indexOf(resultLineIndex) === -1 && conflictLines.push(resultLineIndex);\n                resultLine[minimumColumn + index] += ` ／ ${lineB[additionIndex]}`;\n              }\n            });\n          }\n        }\n      })\n    });\n\n    result.forEach(resultLine => {\n      if (resultLine.length < maximumColumn) {\n        for (let i = 0; i < maximumColumn; i++) {\n          resultLine[i] = resultLine[i] === undefined ? '' : resultLine[i];\n        }\n      }\n    })\n\n    setSheetC(result);\n    setConflicts(conflictLines);\n    setShowResult(true);\n  }\n  const handleClickToggleElement = (e, element) => {\n    const self = e.currentTarget;\n    const target = refs[element].current;\n    target.classList.contains('-active') ? target.classList.remove('-active') : target.classList.add('-active');\n    self.classList.contains('-active') ? self.classList.remove('-active') : self.classList.add('-active');\n  }\n  const handleClickClearResult = () => {\n    setSheetC([]);\n    setShowResult(false);\n  }\n  \n  const handleClickDownloadCsv = (sheetName) => {\n    switch (sheetName) {\n      case 'sheetA': handleTriggerDownloadCsv(sheetA.name, sheetA.sheet);\n        break;\n\n      case 'sheetB': handleTriggerDownloadCsv(sheetB.name, sheetB.sheet);\n        break;\n        \n      case 'sheetC': handleTriggerDownloadCsv(`merge-${sheetA.name}`, sheetC);\n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  const handleTriggerDownloadCsv = (name, sheet) => {\n    let csv = '';\n    sheet.forEach(sheetLine => {\n      let line = '';\n      sheetLine.forEach((sheetCell, cellIndex) => {\n        if (cellIndex === 0) {\n          console.log(sheetCell)\n        }\n        let cell = sheetCell.replace(/#/gi, '＃');\n        cell = cellIndex === 0 ? cell : `,${cell}`;\n        line += cell;\n      })\n      csv += line + '\\n'\n    });\n\n    const fileName = `${name}`;\n    const csvContent = \"data:text/csv;charset=utf-8,%EF%BB%BF\" + encodeURI(csv);\n\n\n    downloadTrigger(fileName, csvContent);\n  }\n\n  return (\n    <div className=\"csv-matcher\">\n      <div className={`upload-wrapper ${isStart ? '-active' : ''}`}>\n        <div className={`drop-zone ${(sheetA && sheetB) ? '-active' : ''}`}>\n          <MyDropzone titleName=\"基礎表格\" className=\"file\" getFileInfo={file => handleLoadFiles(file, 'sheetA')}>【基礎表格】用來被比對表格內的資料，也可以幫表格內擴充更多內容。</MyDropzone>\n          <MyDropzone titleName=\"對照表格\" className=\"file\" getFileInfo={file => handleLoadFiles(file, 'sheetB')}>【對照表格】用來比對基礎表格內的資料，也可以用對照表格的欄位擴充到基礎表格。</MyDropzone>\n          <button className={`start ${(sheetA && sheetB) ? '-active' : ''}`}\n          onClick={handleClickStart}><i className=\"fas fa-table\"></i> 開始製作表格</button>\n        </div>\n      </div>\n      <div className={`application ${showResult ? '-result' : ''} -${expandResult}`} >\n        <div className=\"options-bar\">\n          <div className=\"controller-wrapper\">\n            <div className=\"tag-selector controller\">\n              <div className=\"dropdown\">\n                <div className=\"head\" onClick={ (e) => handleClickToggleElement(e, 'tagSelector') }>\n                  <i className=\"fas fa-thumbtack\"></i>\n                  <span>核對欄位</span>\n                </div>\n                <div className=\"items\" ref={refs.tagSelector}>\n                  { sheetB &&\n                    sheetB.sheet[0].map((cell, cellIndex) =>\n                      <button key={cellIndex} className={ tags.indexOf(cellIndex) !== -1 ? '-tag' : ''}\n                      onClick={() => handleClickSelectTag(cellIndex)}>{cell}</button> )}\n                </div>\n              </div>\n              <div className=\"selected\">\n                { tags &&\n                  tags.map((tag, tagIndex) =>\n                  <button key={tagIndex}\n                      onClick={() => handleClickSelectTag(tag)}><i className=\"fa fa-times\"></i>{sheetB.sheet[0][tag]}</button>) }\n              </div>\n            </div>\n            <div className=\"addition-selector controller\">\n              <div className=\"dropdown\">\n                <div className=\"head\" onClick={ (e) => handleClickToggleElement(e, 'additionSelector') }>\n                  <i className=\"fas fa-file-import\"></i>\n                  <span>添加欄位</span>\n                </div>\n                <div className=\"items\" ref={refs.additionSelector}>\n                  { sheetB &&\n                    sheetB.sheet[0].map((cell, cellIndex) =>\n                      <button key={cellIndex} className={ additions.indexOf(cellIndex) !== -1 ? '-tag' : ''}\n                      onClick={() => handleClickSelectAddition(cellIndex)}>{cell}</button> )}\n                </div>\n              </div>\n              <div className=\"selected\">\n                { additions &&\n                  additions.map((addition, additionIndex) =>\n                  <button key={additionIndex}\n                      onClick={() => handleClickSelectAddition(addition)}><i className=\"fa fa-times\"></i>{sheetB.sheet[0][addition]}</button>) }\n              </div>\n            </div>\n          </div>\n          <button className=\"options-submit\"\n          onClick={() => handleSubmitOptions()}>\n            <i className=\"fas fa-edit\"></i>\n            <span>製作表格</span>\n          </button>\n        </div>\n        <div className={`table-wrapper -${expandTable} `}>\n          <div className=\"item left\">\n            <div className=\"table-head\">\n              <div className=\"name\">\n                <i className=\"icon fas fa-table\"></i>\n                <span>基礎表格 { sheetA && sheetA.name }</span>\n              </div>\n              <div className=\"dropdown\">\n                <button onClick={(e) => handleClickToggleElement(e, 'editSheetA')}>編輯</button>\n                <div className=\"items\" ref={refs.editSheetA}>\n                  <button className=\"file-selector\">\n                    <label htmlFor=\"sheet-a-upload\">重新選擇表格</label>\n                    <input onChange={(e) => {\n                      handleLoadFiles(e.target.files, 'sheetA')\n                      handleClickToggleElement(e, 'editSheetA')\n                    }} id=\"sheet-a-upload\" className=\"button\" type=\"file\" />\n                  </button>\n                  <button onClick={handleExchangeSheet}>表格互換</button>\n                  <button onClick={(e) => {\n                    handleClickDownloadCsv('sheetA')\n                    handleClickToggleElement(e, 'editSheetA')\n                  }}>下載此表格</button>\n                </div>\n              </div>\n            </div>\n            <div className=\"table\">\n              <table>\n                <tbody>\n                  {\n                    sheetA && sheetA.sheet.map((line, lineIndex) => \n                      <tr key={`l${lineIndex}`}>\n                        { line.map((cell, cellIndex) => <td key={`c${cellIndex}`}>{ cell }</td>) }\n                      </tr>\n                    )\n                  }\n                </tbody>\n              </table>\n            </div>\n            { expandTable === 'normal' && <button className=\"expand-button\" onClick={() => setExpandTable('left')}><i className=\"fa fa-expand-alt\"></i></button> }\n            { expandTable !== 'normal' && <button className=\"expand-button -reverse\" onClick={() => setExpandTable('normal')}><i className=\"fa fa-compress-alt\"></i></button> }\n          </div>\n          <div className=\"item right\">\n            <div className=\"table-head\">\n              <div className=\"name\">\n                <i className=\"icon fas fa-angle-double-left\"></i>\n                <span>對照表格 { sheetB && sheetB.name }</span>\n              </div>\n              <div className=\"dropdown\">\n                <button onClick={(e) => handleClickToggleElement(e, 'editSheetB')}>編輯</button>\n                <div className=\"items\" ref={refs.editSheetB}>\n                  <button className=\"file-selector\">\n                    <label htmlFor=\"sheet-b-upload\">重新選擇表格</label>\n                    <input onChange={(e) => {\n                      handleLoadFiles(e.target.files, 'sheetB')\n                      handleClickToggleElement(e, 'editSheetB')\n                    }} id=\"sheet-b-upload\" className=\"button\" type=\"file\" />\n                  </button>\n                  <button onClick={handleExchangeSheet}>表格互換</button>\n                  <button onClick={(e) => {\n                    handleClickDownloadCsv('sheetB')\n                    handleClickToggleElement(e, 'editSheetB')\n                  }}>下載此表格</button>\n                </div>\n              </div>\n            </div>\n            <div className=\"table\">\n              <table>\n                <tbody>\n                  {\n                    sheetB && sheetB.sheet.map((line, lineIndex) => \n                      <tr key={`l${lineIndex}`}>\n                        {\n                          line.map((cell, cellIndex) => {\n                            return (\n                              <td key={`c${cellIndex}`}\n                              className={`${tags.indexOf(cellIndex) !== -1 ? '-tag' : ''} ${additions.indexOf(cellIndex) !== -1 ? '-addition' : ''}`}\n                              >{ cell }</td>\n                            )\n                          })\n                        }\n                      </tr>\n                    )\n                  }\n                </tbody>\n              </table>\n            </div>\n            {expandTable === 'normal' && <button className=\"expand-button\" onClick={() => setExpandTable('right')}><i className=\"fa fa-expand-alt\"></i></button>}\n            {expandTable !== 'normal' && <button className=\"expand-button -reverse\" onClick={() => setExpandTable('normal')}><i className=\"fa fa-compress-alt\"></i></button>}\n          </div>\n        </div>\n        <div className=\"result-wrapper\">\n          <div className=\"table-head\">\n            <div className=\"name\">\n              <i className=\"icon fas fa-columns\"></i>\n              <span>合併後表格</span>\n            </div>\n            <div className=\"dropdown\">\n              <button onClick={(e) => handleClickToggleElement(e, 'editSheetC')}>編輯</button>\n              <div className=\"items\" ref={refs.editSheetC}>\n                <button onClick={(e) => {\n                  handleClickDownloadCsv('sheetC')\n                  handleClickToggleElement(e, 'editSheetC')\n                }}>下載此表格</button>\n              </div>\n            </div>\n            <button className=\"close\" onClick={handleClickClearResult} ><i className=\"fas fa-times\"></i></button>\n          </div>\n          <div className=\"table\">\n            <table>\n              <tbody>\n                {\n                  sheetC && sheetC.map((line, lineIndex) =>\n                    <tr key={`l${lineIndex}`}\n                      className={conflicts.indexOf(lineIndex) !== -1 ? '-conflict' : ''}> \n                      {line.map((cell, cellIndex) => \n                        <td key={`c${cellIndex}`} className={cellIndex+1 > sheetA.sheet[0].length ? '-increase' : ''}>{cell}</td>\n                      )}\n                    </tr>\n                  )\n                }\n              </tbody>\n            </table>\n          </div>\n          {expandResult === 'fill' && <button className=\"expand-button\" onClick={() => setExpandResult('normal')}><i className=\"fa fa-compress-alt\"></i></button>}\n          {expandResult !== 'fill' && <button className=\"expand-button -reverse\" onClick={() => setExpandResult('fill')}><i className=\"fa fa-expand-alt\"></i></button>}\n        </div>\n        {/* <input type=\"file\" id=\"input\" onChange={handleFiles}></input> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Application;\n","import React from 'react';\nimport './App.css';\nimport Application from './Application';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Application></Application>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}