{"version":3,"sources":["DropZone/index.js","Application/index.js","utils/methods.js","App.js","serviceWorker.js","index.js"],"names":["DropZone","titleName","className","getFileInfo","children","useState","file","setFile","error","setError","onDrop","useCallback","acceptedFiles","type","useDropzone","getRootProps","getInputProps","isDragActive","multiple","accept","name","App","refs","tagSelector","useRef","additionSelector","editSheetA","editSheetB","editSheetC","tags","setTags","conflicts","setConflicts","additions","setAdditions","expandTable","setExpandTable","expandResult","setExpandResult","isStart","setStart","showResult","setShowResult","example","setExample","sheetA","setSheetA","sheetB","setSheetB","sheetC","setSheetC","getCsvContent","csvString","cellRegex","split","map","line","cellData","filter","element","undefined","useEffect","handleLoadFiles","files","sheetName","reader","FileReader","onload","data","result","sheet","readAsText","handleExchangeSheet","newSheetA","JSON","parse","stringify","newSheetAName","newSheetB","newSheetBName","handleClickSelectTag","item","newTags","slice","indexOf","push","index","findIndex","splice","handleClickSelectAddition","Additions","handleClickToggleElement","e","self","currentTarget","target","current","classList","contains","remove","add","handleClickDownloadCsv","handleTriggerDownloadCsv","csv","forEach","sheetLine","sheetCell","cellIndex","console","log","cell","replace","fileName","download","downloadTrigger","document","createElement","setAttribute","click","body","append","encodeURI","onClick","sheetAExample","sheetBExample","size","ref","key","tag","tagIndex","addition","additionIndex","conflictLines","maximumColumn","length","minimumColumn","lineB","matchers","resultLine","resultLineIndex","array","matcher","includes","matchChecker","i","handleSubmitOptions","htmlFor","onChange","id","lineIndex","Application","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3350ce57.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone'\nimport { File, Error, Check } from '@styled-icons/boxicons-regular';\n\nconst DropZone = ({titleName, className, getFileInfo, children}) => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles[0].type === 'text/csv') {\n      setError('');\n      setFile(acceptedFiles[0]);\n      getFileInfo(acceptedFiles);\n    }\n    else {\n      setFile(null);\n      setError('這個檔案不是 .csv 喔！');\n    }\n  }, [])\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <div {...getRootProps()} className={`${className} ${isDragActive ? '-active' : ''}`}>\n      <input {...getInputProps()} multiple={false} accept=\".csv\" />\n      { !file &&\n        <>\n          <div className=\"icon\">\n            <File />\n          </div>\n          {\n            isDragActive ?\n            <p className=\"msg\">拖曳到這裡</p> :\n            <p className=\"msg\">點擊或拖曳到這裡</p>\n          }\n        </>\n      }\n      {\n        error !== '' &&\n        <p className=\"error\"><Error /> {error}</p>\n      }\n      {\n        file && <p className=\"name\"><Check /> {titleName} {file.name}</p>\n      }\n      <p className=\"info\">{children}</p>\n    </div>\n  )\n}\n\n\nexport default DropZone;","import React, { useEffect, useState, useRef } from 'react';\nimport { Table, RightArrowAlt, Merge, Expand, Collapse, X, Pin, Import, Edit } from '@styled-icons/boxicons-regular';\nimport { downloadTrigger } from '../utils/methods';\nimport DropZone from '../DropZone';\nimport './style.css';\n\nconst App = () => {\n  // Refs\n  const refs = {\n    tagSelector: useRef(null),\n    additionSelector: useRef(null),\n    editSheetA: useRef(null),\n    editSheetB: useRef(null),\n    editSheetC: useRef(null),\n  }\n  \n  const [tags, setTags] = useState([]);\n  const [conflicts, setConflicts] = useState([]);\n  const [additions, setAdditions] = useState([]);\n  const [expandTable, setExpandTable] = useState('normal');\n  const [expandResult, setExpandResult] = useState('normal');\n  const [isStart, setStart] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [example, setExample] = useState(false);\n  const [sheetA, setSheetA] = useState(null);\n  const [sheetB, setSheetB] = useState(null);\n  const [sheetC, setSheetC] = useState(null);\n\n  useEffect(() => {\n    // if (!sheetA || !sheetB) {\n    //   handleLoadAllData();\n    // }\n  }, [tags, additions]);\n\n  function getCsvContent(csvString) {\n    const lineRegex = /\\n(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/g;\n    const cellRegex = /,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/g;\n    const lines = csvString.split(lineRegex);\n    const cells = lines.map(line => {\n      let cellData = line.split(cellRegex);\n      cellData = cellData.filter(function (element) {\n        return element !== undefined;\n      });\n      return cellData\n    });\n    return cells;\n  }\n  \n  const handleClickStart = () => {\n    setStart(true);\n  }\n  const handleLoadFiles = (files, sheetName) => {\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = function () {\n      const data = getCsvContent(reader.result);\n      switch (sheetName) {\n        case 'sheetA':\n          setSheetA({ name: file.name, sheet: data });\n          break;\n        case 'sheetB':\n          setSheetB({ name: file.name, sheet: data });\n          break;\n      \n        default:\n          break;\n      }\n    };\n    reader.readAsText(file);\n  }\n  const handleExchangeSheet = () => {\n    const newSheetA = JSON.parse(JSON.stringify(sheetB.sheet));\n    const newSheetAName = sheetB.name;\n    const newSheetB = JSON.parse(JSON.stringify(sheetA.sheet));\n    const newSheetBName = sheetA.name;\n\n    setSheetA({ name: newSheetAName, sheet: newSheetA });\n    setSheetB({ name: newSheetBName, sheet: newSheetB });\n  }\n  const handleClickSelectTag = (item) => {\n    const newTags = tags.slice();\n    if (newTags.indexOf(item) === -1) {\n      newTags.push(item);\n    }\n    else {\n      const index = newTags.findIndex(filter => filter === item);\n      newTags.splice(index, 1);\n    }\n    setTags(newTags);\n  }\n  const handleClickSelectAddition = (item) => {\n    const Additions = additions.slice();\n    if (Additions.indexOf(item) === -1) {\n      Additions.push(item);\n    }\n    else {\n      const index = Additions.findIndex(filter => filter === item);\n      Additions.splice(index, 1);\n    }\n    setAdditions(Additions);\n  }\n  const handleSubmitOptions = () => {\n    function matchChecker(array, matchers) {\n      const result = matchers.map(matcher => {\n        return array.indexOf(matcher) !== -1;\n      });\n      return result.includes(true);\n    }\n    \n    const result = JSON.parse(JSON.stringify(sheetA.sheet));\n    const conflictLines = [];\n    \n    const maximumColumn = result[0].length + additions.length;\n    const minimumColumn = result[0].length;\n\n    additions.forEach(index => {\n      result[0].push(sheetB.sheet[0][index]);\n    });\n\n    sheetB.sheet.forEach(lineB => {\n      const matchers = tags.map(tagIndex => lineB[tagIndex]);\n      result.forEach((resultLine, resultLineIndex) => {\n        if (resultLineIndex !== 0) {\n          const isMatch = matchChecker(resultLine, matchers);\n          if (isMatch) {\n            additions.forEach((additionIndex, index) => {\n              if (resultLine.length < maximumColumn) {\n                resultLine.push(lineB[additionIndex]);\n              }\n              else {\n                conflictLines.indexOf(resultLineIndex) === -1 && conflictLines.push(resultLineIndex);\n                resultLine[minimumColumn + index] += ` ／ ${lineB[additionIndex]}`;\n              }\n            });\n          }\n        }\n      })\n    });\n\n    result.forEach(resultLine => {\n      if (resultLine.length < maximumColumn) {\n        for (let i = 0; i < maximumColumn; i++) {\n          resultLine[i] = resultLine[i] === undefined ? '' : resultLine[i];\n        }\n      }\n    })\n\n    setSheetC(result);\n    setConflicts(conflictLines);\n    setShowResult(true);\n  }\n  const handleClickToggleElement = (e, element) => {\n    const self = e.currentTarget;\n    const target = refs[element].current;\n    target.classList.contains('-active') ? target.classList.remove('-active') : target.classList.add('-active');\n    self.classList.contains('-active') ? self.classList.remove('-active') : self.classList.add('-active');\n  }\n  const handleClickClearResult = () => {\n    setSheetC([]);\n    setShowResult(false);\n  }\n  \n  const handleClickDownloadCsv = (sheetName) => {\n    switch (sheetName) {\n      case 'sheetA': handleTriggerDownloadCsv(sheetA.name, sheetA.sheet);\n        break;\n\n      case 'sheetB': handleTriggerDownloadCsv(sheetB.name, sheetB.sheet);\n        break;\n        \n      case 'sheetC': handleTriggerDownloadCsv(`merge-${sheetA.name}`, sheetC);\n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  const handleTriggerDownloadCsv = (name, sheet) => {\n    let csv = '';\n    sheet.forEach(sheetLine => {\n      let line = '';\n      sheetLine.forEach((sheetCell, cellIndex) => {\n        if (cellIndex === 0) {\n          console.log(sheetCell)\n        }\n        let cell = sheetCell.replace(/#/gi, '＃');\n        cell = cellIndex === 0 ? cell : `,${cell}`;\n        line += cell;\n      })\n      csv += line + '\\n'\n    });\n\n    const fileName = `${name}`;\n    const csvContent = \"data:text/csv;charset=utf-8,%EF%BB%BF\" + encodeURI(csv);\n\n\n    downloadTrigger(fileName, csvContent);\n  }\n\n  function handleUseExampleSheet() {\n    const sheetAExample = getCsvContent(`title, value_1, value_2, value_3,\n    apple, 10, 12, 15,\n    banana, 8, 9, 2,\n    cat, 100, 8, 6,`);\n    const sheetBExample = getCsvContent(`title, name, value_2, value_3,\n    apple, 蘋果, 12, 15,\n    banana, 香蕉, 9, 2,\n    cat, 貓, 8, 6,`);\n    setSheetA({ name: 'example1', sheet: sheetAExample });\n    setSheetB({ name: 'example2', sheet: sheetBExample });\n    setExample(true);\n  }\n\n  return (\n    <div className=\"csv-matcher\">\n      <div className={`upload-wrapper ${isStart ? '-active' : ''}`}>\n        <button onClick={handleUseExampleSheet} className=\"example\">Example Sheet</button>\n        <div className={`drop-zone ${(sheetA && sheetB) ? '-active' : ''}`}>\n          <DropZone titleName=\"基礎表格\" className={`file ${example ? '-blur' : ''}`} getFileInfo={file => handleLoadFiles(file, 'sheetA')}>【基礎表格】用來被比對表格內的資料，也可以幫表格內擴充更多內容。</DropZone>\n          <DropZone titleName=\"對照表格\" className={`file ${example ? '-blur' : ''}`} getFileInfo={file => handleLoadFiles(file, 'sheetB')}>【對照表格】用來比對基礎表格內的資料，也可以用對照表格的欄位擴充到基礎表格。</DropZone>\n          <button className={`start ${(sheetA && sheetB) ? '-active' : ''}`}\n          onClick={handleClickStart}>\n            <Table size={18} /> \n            <span>開始製作表格</span>\n          </button>\n        </div>\n      </div>\n      <div className={`application ${showResult ? '-result' : ''} -${expandResult}`} >\n        <div className=\"options-bar\">\n          <div className=\"controller-wrapper\">\n            <div className=\"tag-selector controller\">\n              <div className=\"dropdown\">\n                <div className=\"head\" onClick={ (e) => handleClickToggleElement(e, 'tagSelector') }>\n                  <Pin />\n                  <span>核對欄位</span>\n                </div>\n                <div className=\"items\" ref={refs.tagSelector}>\n                  { sheetB &&\n                    sheetB.sheet[0].map((cell, cellIndex) =>\n                      <button key={cellIndex} className={ tags.indexOf(cellIndex) !== -1 ? '-tag' : ''}\n                      onClick={() => handleClickSelectTag(cellIndex)}>{cell}</button> )}\n                </div>\n              </div>\n              <div className=\"selected\">\n                { tags &&\n                  tags.map((tag, tagIndex) =>\n                  <button key={tagIndex}\n                      onClick={() => handleClickSelectTag(tag)}><X size={14} />{sheetB.sheet[0][tag]}</button>) }\n              </div>\n            </div>\n            <div className=\"addition-selector controller\">\n              <div className=\"dropdown\">\n                <div className=\"head\" onClick={ (e) => handleClickToggleElement(e, 'additionSelector') }>\n                  <Import />\n                  <span>添加欄位</span>\n                </div>\n                <div className=\"items\" ref={refs.additionSelector}>\n                  { sheetB &&\n                    sheetB.sheet[0].map((cell, cellIndex) =>\n                      <button key={cellIndex} className={ additions.indexOf(cellIndex) !== -1 ? '-tag' : ''}\n                      onClick={() => handleClickSelectAddition(cellIndex)}>{cell}</button> )}\n                </div>\n              </div>\n              <div className=\"selected\">\n                { additions &&\n                  additions.map((addition, additionIndex) =>\n                  <button key={additionIndex}\n                      onClick={() => handleClickSelectAddition(addition)}><X />{sheetB.sheet[0][addition]}</button>) }\n              </div>\n            </div>\n          </div>\n          <button className=\"options-submit\"\n          onClick={() => handleSubmitOptions()}>\n            <Edit size={18} />\n            <span>製作表格</span>\n          </button>\n        </div>\n        <div className={`table-wrapper -${expandTable} `}>\n          <div className=\"item left\">\n            <div className=\"table-head\">\n              <div className=\"name\">\n                <Table />\n                <span>基礎表格 { sheetA && sheetA.name }</span>\n              </div>\n              <div className=\"dropdown\">\n                <button onClick={(e) => handleClickToggleElement(e, 'editSheetA')}>編輯</button>\n                <div className=\"items\" ref={refs.editSheetA}>\n                  <button className=\"file-selector\">\n                    <label htmlFor=\"sheet-a-upload\">重新選擇表格</label>\n                    <input onChange={(e) => {\n                      handleLoadFiles(e.target.files, 'sheetA')\n                      handleClickToggleElement(e, 'editSheetA')\n                    }} id=\"sheet-a-upload\" className=\"button\" type=\"file\" />\n                  </button>\n                  <button onClick={handleExchangeSheet}>表格互換</button>\n                  <button onClick={(e) => {\n                    handleClickDownloadCsv('sheetA')\n                    handleClickToggleElement(e, 'editSheetA')\n                  }}>下載此表格</button>\n                </div>\n              </div>\n            </div>\n            <div className=\"table\">\n              <table>\n                <tbody>\n                  {\n                    sheetA && sheetA.sheet.map((line, lineIndex) => \n                      <tr key={`l${lineIndex}`}>\n                        { line.map((cell, cellIndex) => <td key={`c${cellIndex}`}>{ cell }</td>) }\n                      </tr>\n                    )\n                  }\n                </tbody>\n              </table>\n            </div>\n            { expandTable === 'normal' && <button className=\"expand-button\" onClick={() => setExpandTable('left')}><Expand /></button> }\n            { expandTable !== 'normal' && <button className=\"expand-button -reverse\" onClick={() => setExpandTable('normal')}><Collapse /></button> }\n          </div>\n          <div className=\"item right\">\n            <div className=\"table-head\">\n              <div className=\"name\">\n                <RightArrowAlt />\n                <span>對照表格 { sheetB && sheetB.name }</span>\n              </div>\n              <div className=\"dropdown\">\n                <button onClick={(e) => handleClickToggleElement(e, 'editSheetB')}>編輯</button>\n                <div className=\"items\" ref={refs.editSheetB}>\n                  <button className=\"file-selector\">\n                    <label htmlFor=\"sheet-b-upload\">重新選擇表格</label>\n                    <input onChange={(e) => {\n                      handleLoadFiles(e.target.files, 'sheetB')\n                      handleClickToggleElement(e, 'editSheetB')\n                    }} id=\"sheet-b-upload\" className=\"button\" type=\"file\" />\n                  </button>\n                  <button onClick={handleExchangeSheet}>表格互換</button>\n                  <button onClick={(e) => {\n                    handleClickDownloadCsv('sheetB')\n                    handleClickToggleElement(e, 'editSheetB')\n                  }}>下載此表格</button>\n                </div>\n              </div>\n            </div>\n            <div className=\"table\">\n              <table>\n                <tbody>\n                  {\n                    sheetB && sheetB.sheet.map((line, lineIndex) => \n                      <tr key={`l${lineIndex}`}>\n                        {\n                          line.map((cell, cellIndex) => {\n                            return (\n                              <td key={`c${cellIndex}`}\n                              className={`${tags.indexOf(cellIndex) !== -1 ? '-tag' : ''} ${additions.indexOf(cellIndex) !== -1 ? '-addition' : ''}`}\n                              >{ cell }</td>\n                            )\n                          })\n                        }\n                      </tr>\n                    )\n                  }\n                </tbody>\n              </table>\n            </div>\n            {expandTable === 'normal' && <button className=\"expand-button\" onClick={() => setExpandTable('right')}><Expand /></button>}\n            {expandTable !== 'normal' && <button className=\"expand-button -reverse\" onClick={() => setExpandTable('normal')}><Collapse /></button>}\n          </div>\n        </div>\n        <div className=\"result-wrapper\">\n          <div className=\"table-head\">\n            <div className=\"name\">\n              <Merge />\n              <span>合併後表格</span>\n            </div>\n            <div className=\"dropdown\">\n              <button onClick={(e) => handleClickToggleElement(e, 'editSheetC')}>編輯</button>\n              <div className=\"items\" ref={refs.editSheetC}>\n                <button onClick={(e) => {\n                  handleClickDownloadCsv('sheetC')\n                  handleClickToggleElement(e, 'editSheetC')\n                }}>下載此表格</button>\n              </div>\n            </div>\n            <button className=\"close\" onClick={handleClickClearResult} ><X /></button>\n          </div>\n          <div className=\"table\">\n            <table>\n              <tbody>\n                {\n                  sheetC && sheetC.map((line, lineIndex) =>\n                    <tr key={`l${lineIndex}`}\n                      className={conflicts.indexOf(lineIndex) !== -1 ? '-conflict' : ''}> \n                      {line.map((cell, cellIndex) => \n                        <td key={`c${cellIndex}`} className={cellIndex+1 > sheetA.sheet[0].length ? '-increase' : ''}>{cell}</td>\n                      )}\n                    </tr>\n                  )\n                }\n              </tbody>\n            </table>\n          </div>\n          {expandResult === 'fill' && <button className=\"expand-button\" onClick={() => setExpandResult('normal')}><Collapse size={24} /></button>}\n          {expandResult !== 'fill' && <button className=\"expand-button -reverse\" onClick={() => setExpandResult('fill')}><Expand size={24} /></button>}\n        </div>\n        {/* <input type=\"file\" id=\"input\" onChange={handleFiles}></input> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export function downloadTrigger(fileName, download) {\n  const downloadTrigger = document.createElement('a');\n  downloadTrigger.setAttribute('download', fileName);\n  downloadTrigger.setAttribute('href', download);\n  downloadTrigger.click();\n  document.body.append(downloadTrigger)\n}\n","import React from 'react';\nimport './App.css';\nimport Application from './Application';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Application></Application>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}